{"version":3,"file":"static/js/920.6174ffd8.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchForm.styled.jsx","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchInput.styled.jsx","components/SearchBar/SearchInput.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => (\n  <div>\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  </div>\n);\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieLink } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  console.log(movies);\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title || movie.name}\n          </MovieLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  padding: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { Input } from './SearchInput.styled';\n\nconst SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;\n","import styled from '@emotion/styled';\n\nexport const ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import SearchForm from './SearchForm';\nimport { useState } from 'react';\nimport SearchInput from './SearchInput';\nimport PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { ButtonIcon } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchForm = event.currentTarget;\n    searchForm.reset();\n    onSubmit(query);\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} onChange={handleChange}>\n        <SearchInput />\n        <ButtonIcon type=\"submit\" aria-label=\"search button\">\n          <BsSearch />\n        </ButtonIcon>\n      </SearchForm>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchMovieByQuery } from 'services/API';\nimport MovieList from 'components/MovieList';\nimport SearchBar from 'components/SearchBar';\nimport Loader from 'components/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [movies, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setIsLoading(true);\n\n    fetchMovieByQuery(movieName)\n      .then(data => {\n        if (!data.results.length) {\n          setError(true);\n          return console.log(\n            'There are no movies with this request. Please,1 try again.'\n          );\n        }\n\n        setMoviesList(data.results);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieName]);\n\n  const handleSubmit = query => {\n    setSearchParams({ movieName: query });\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <>There are no movies with this request. Please, try again.</>}\n      <MovieList movies={movies} />\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '265284652100bb67997703a1d052ae84';\n\nexport async function fetchMoviesTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","MovieLink","styled","Link","movies","console","log","location","useLocation","map","movie","to","id","state","from","original_title","name","Form","onSubmit","children","Input","type","pattern","title","required","autoComplete","autoFocus","placeholder","ButtonIcon","useState","query","setQuery","event","preventDefault","currentTarget","reset","onChange","target","value","useSearchParams","searchParams","setSearchParams","movieName","get","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","fetchMovieByQuery","then","data","results","length","catch","message","finally","MovieList","Loader","BASE_URL","KEY","fetchMoviesTrending","url","axios","response","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}