{"version":3,"file":"static/js/122.1b233738.chunk.js","mappings":"yOA0BA,EArBgB,WACd,OAAqCA,EAAAA,EAAAA,UAAS,IAA9C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAcM,EAAKC,QAAvB,GACrC,GAAE,CAACN,KAGF,wBACGF,EAAYS,OAAS,EAClBT,EAAYU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACd,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADK,IAMhB,kDAGT,C,mMCvBKC,EAAW,gCACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,oCAC8CC,GAD9C,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASZ,MALb,gCAOHa,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACCN,EADD,UACUH,EADV,gCAC0CC,EAD1C,kBACuDQ,GADvD,kBAIoBL,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASZ,MALb,gCAOHa,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCX,GAAjC,gFACCI,EADD,UACUH,EADV,iBAC2BD,EAD3B,oBACyCE,GADzC,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASZ,MALb,gCAOHa,QAAQC,IAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BZ,GAA9B,gFACCI,EADD,UACUH,EADV,iBAC2BD,EAD3B,4BACiDE,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASZ,MALb,gCAOHa,QAAQC,IAAR,MAPG,gFAWA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCQ,GAAjC,gFACCI,EADD,UACUH,EADV,iBAC2BD,EAD3B,4BACiDE,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASZ,MALb,gCAOHa,QAAQC,IAAR,MAPG,gF","sources":["components/Reviews/Reviews.jsx","services/API.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchMovieReviews } from 'services/API';\n\nconst Reviews = () => {\n  const [reviewsList, setReviewList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(data => setReviewList(data.results));\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviewsList.length > 0\n        ? reviewsList.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        : \"Sorry, we don't have any review for this movie\"}\n    </ul>\n  );\n};\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '265284652100bb67997703a1d052ae84';\n\nexport async function fetchMoviesTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["useState","reviewsList","setReviewList","movieId","useParams","useEffect","fetchMovieReviews","then","data","results","length","map","author","content","id","BASE_URL","KEY","fetchMoviesTrending","url","axios","response","console","log","fetchMovieByQuery","query","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}