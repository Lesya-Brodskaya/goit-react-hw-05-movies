{"version":3,"file":"static/js/93.badd2d6e.chunk.js","mappings":"0PAEaA,EAAWC,EAAAA,EAAAA,GAAH,6CAIRC,EAAWD,EAAAA,EAAAA,GAAH,qEAKRE,EAAOF,EAAAA,EAAAA,GAAH,0CAIJG,EAAYH,EAAAA,EAAAA,EAAH,sC,SC4BtB,EArCa,WACX,OAAgCI,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAYM,EAAKC,KAArB,GAClC,GAAE,CAACN,KAGF,SAACR,EAAD,UACGM,EAASS,OAAS,EACfT,EAASU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACX,UAAClB,EAAD,YACE,gBACEmB,IACEF,EAAY,yCAC0BA,GAD1B,+CAIdG,IAAI,QACJC,QAAQ,OACRC,MAAO,IACPC,OAAQ,OAEV,SAACtB,EAAD,UAAOe,KACP,UAACd,EAAD,yBAAuBgB,OAbVH,EADJ,IAiBb,+BAGT,C,mMCnCKS,EAAW,gCACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,oCAC8CC,GAD9C,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASlB,MALb,gCAOHmB,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACCN,EADD,UACUH,EADV,gCAC0CC,EAD1C,kBACuDQ,GADvD,kBAIoBL,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASlB,MALb,gCAOHmB,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCnB,GAAjC,gFACCY,EADD,UACUH,EADV,iBAC2BT,EAD3B,oBACyCU,GADzC,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASlB,MALb,gCAOHmB,QAAQC,IAAR,MAPG,gFAWA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BM,GAA9B,gFACCY,EADD,UACUH,EADV,iBAC2BT,EAD3B,4BACiDU,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASlB,MALb,gCAOHmB,QAAQC,IAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCpB,GAAjC,gFACCY,EADD,UACUH,EADV,iBAC2BT,EAD3B,4BACiDU,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASlB,MALb,gCAOHmB,QAAQC,IAAR,MAPG,gF","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  list-style: none;\n`;\n\nexport const CastItem = styled.li`\n  margin: 10px 0 16px;\n  padding: 2px 8px;\n`;\n\nexport const Name = styled.h3`\n  margin: 8px 0;\n`;\n\nexport const Character = styled.p`\n  margin: 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieCast } from 'services/API';\nimport { CastList, CastItem, Name, Character } from './Cast.styled';\n\nconst Cast = () => {\n  const [castList, setCastList] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(data => setCastList(data.cast));\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {castList.length > 0\n        ? castList.map(({ id, name, profile_path, character }) => (\n            <CastItem key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : `http://www.suryalaya.org/images/no_image.jpg`\n                }\n                alt=\"actor\"\n                loading=\"lazy\"\n                width={120}\n                height={180}\n              />\n              <Name>{name}</Name>\n              <Character>Character: {character}</Character>\n            </CastItem>\n          ))\n        : \"Sorry, there isn't any info\"}\n    </CastList>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.number,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '265284652100bb67997703a1d052ae84';\n\nexport async function fetchMoviesTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["CastList","styled","CastItem","Name","Character","useState","castList","setCastList","movieId","useParams","useEffect","fetchMovieCast","then","data","cast","length","map","id","name","profile_path","character","src","alt","loading","width","height","BASE_URL","KEY","fetchMoviesTrending","url","axios","response","console","log","fetchMovieByQuery","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}