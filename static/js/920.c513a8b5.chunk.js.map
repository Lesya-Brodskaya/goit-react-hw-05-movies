{"version":3,"file":"static/js/920.c513a8b5.chunk.js","mappings":"8LAgBA,EAde,kBACb,0BACE,SAAC,KAAD,CACEA,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,gBACbC,SAAS,KATA,C,+ICCFC,EAAQC,EAAAA,EAAAA,GAAH,kEAKLC,EAAYD,EAAAA,EAAAA,GAAH,8HAQTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,wK,4JCdTI,EAAOJ,EAAAA,EAAAA,KAAH,mN,SCKjB,EAJmB,SAAC,GAAD,IAAGK,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACjB,SAACF,EAAD,CAAMC,SAAUA,EAAhB,SAA2BC,GADV,ECDNC,EAAQP,EAAAA,EAAAA,MAAH,8LCalB,EAboB,kBAClB,SAACO,EAAD,CACEC,KAAK,OACLC,KAAK,YACLC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,aAAa,MACbC,WAAS,EACTC,YAAY,mBATI,E,UCAPC,EAAahB,EAAAA,EAAAA,OAAH,uUCmBvB,EAfkB,SAAC,GAAD,IAAGK,EAAH,EAAGA,SAAH,OAChB,+BACE,UAAC,EAAD,CAAYA,SAAUA,EAAtB,WACE,SAAC,EAAD,KACA,SAACW,EAAD,CAAYR,KAAK,SAAS,aAAW,gBAArC,UACE,SAAC,MAAD,UALU,E,UC4DlB,EA1De,WAAO,IAAD,EACnB,GAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GAC7CC,GAAWC,EAAAA,EAAAA,MACjB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdX,IAGJM,EAAc,IACdE,GAAa,IAEbI,EAAAA,EAAAA,IAAkBZ,GAAWa,MAAK,SAAAC,GAChC,IAAKA,EAAKC,QAAQC,OAGhB,OAFAR,GAAa,GACbE,GAAS,GACFO,QAAQC,IACb,8DAIJR,GAAS,GACTJ,EAAcQ,EAAKC,SACnBP,GAAa,EACd,IACF,GAAE,CAACR,IAUJ,OACE,6BACE,SAAC,EAAD,CAAWf,SAVM,SAAAkC,GACnBA,EAAMC,iBAEN,IAAMC,EAAaF,EAAMG,cACzBvB,EAAgB,CAAEC,UAAWqB,EAAWE,SAASvB,UAAUwB,QAC3DH,EAAWI,OACZ,IAKIhB,IAAS,6FACV,UAAC,KAAD,WACGJ,EAAWqB,KAAI,SAAAC,GACd,OACE,yBACE,SAAC,KAAD,CAAWC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM7B,GAArD,SACGyB,EAAMK,gBAAkBL,EAAMtC,QAF1BsC,EAAME,GAMlB,IACAtB,IAAa,SAAC0B,EAAA,EAAD,SAIrB,C,mMC9DKC,EAAW,gCACXC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,oCAC8CC,GAD9C,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASzB,MALb,gCAOHG,QAAQC,IAAR,MAPG,gFAWA,SAAeN,EAAtB,+CAAO,OAAP,oBAAO,WAAiC4B,GAAjC,gFACCH,EADD,UACUH,EADV,gCAC0CC,EAD1C,kBACuDK,GADvD,kBAIoBF,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASzB,MALb,gCAOHG,QAAQC,IAAR,MAPG,gFAWA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCZ,GAAjC,gFACCQ,EADD,UACUH,EADV,iBAC2BL,EAD3B,oBACyCM,GADzC,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASzB,MALb,gCAOHG,QAAQC,IAAR,MAPG,gFAWA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,gFACCQ,EADD,UACUH,EADV,iBAC2BL,EAD3B,4BACiDM,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASzB,MALb,gCAOHG,QAAQC,IAAR,MAPG,gFAWA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCd,GAAjC,gFACCQ,EADD,UACUH,EADV,iBAC2BL,EAD3B,4BACiDM,GADjD,kBAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,yBAKIA,EAASzB,MALb,gCAOHG,QAAQC,IAAR,MAPG,gF","sources":["components/Loader/Loader.jsx","pages/Home/Home.styled.jsx","components/SearchBar/SearchForm.styled.jsx","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchInput.styled.jsx","components/SearchBar/SearchInput.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/API.jsx"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => (\n  <div>\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  </div>\n);\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-top: 40px;\n  margin-bottom: 0;\n`;\n\nexport const MovieList = styled.ul`\n  padding: 20px 0 20px;\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n\n  &:hover {\n    border-radius: 5px;\n    box-shadow: 1px 2px 4px 3px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 30px;\n  max-width: 300px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin-top: 8px;\n`;\n","import PropTypes from 'prop-types';\nimport { Form } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <Form onSubmit={onSubmit}>{children}</Form>\n);\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 16px;\n  padding: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 16px;\n  }\n`;\n","import { Input } from './SearchInput.styled';\n\nconst SearchInput = () => (\n  <Input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport default SearchInput;\n","import styled from '@emotion/styled';\n\nexport const ButtonIcon = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: inherit;\n  width: 30px;\n  height: 30px;\n  border: 0;\n  margin-right: 4px;\n  margin-left: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import SearchForm from './SearchForm';\nimport SearchInput from './SearchInput';\nimport PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\nimport { ButtonIcon } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => (\n  <>\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <ButtonIcon type=\"submit\" aria-label=\"search button\">\n        <BsSearch />\n      </ButtonIcon>\n    </SearchForm>\n  </>\n);\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { fetchMovieByQuery } from 'services/API';\nimport Loader from 'components/Loader';\nimport SearchBar from 'components/SearchBar';\nimport { MovieList, MovieLink } from 'pages/Home/Home.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const location = useLocation();\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    fetchMovieByQuery(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log(\n          'There are no movies with this request. Please,1 try again.'\n        );\n      }\n\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const searchForm = event.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && <>There are no movies with this request. Please, try again.</>}\n      <MovieList>\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </MovieLink>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </MovieList>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '265284652100bb67997703a1d052ae84';\n\nexport async function fetchMoviesTrending() {\n  const url = `${BASE_URL}trending/all/day?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieByQuery(query) {\n  const url = `${BASE_URL}search/movie?api_key=${KEY}&query=${query}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  const url = `${BASE_URL}movie/${id}?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  const url = `${BASE_URL}movie/${id}/credits?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const url = `${BASE_URL}movie/${id}/reviews?api_key=${KEY}`;\n\n  try {\n    const response = await axios.get(url);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","Title","styled","MovieList","MovieLink","Link","Form","onSubmit","children","Input","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","ButtonIcon","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useState","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","fetchMovieByQuery","then","data","results","length","console","log","event","preventDefault","searchForm","currentTarget","elements","value","reset","map","movie","to","id","state","from","original_title","Loader","BASE_URL","KEY","fetchMoviesTrending","url","axios","response","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}